generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model RuinUser {
  id         Int          @id @unique(map: "id_UNIQUE") @default(autoincrement())
  username   String       @db.VarChar(45)
  email      String       @db.VarChar(45)
  pass       String       @db.VarChar(99)
  avatars    avatars?
  comments   comments[]
  favourites Favourites[]

  @@map("ruin_users")
}

model Favourites {
  id          Int       @id @default(autoincrement())
  user_id     Int?
  comic_id    String    @db.VarChar(255)
  manga_title String    @db.VarChar(255)
  ruin_users  RuinUser? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "favourites_ibfk_1")

  @@index([user_id], map: "user_id")
  @@map("favourites")
}

model comments {
  id         Int       @id @default(autoincrement())
  comment    String    @db.VarChar(256)
  user_id    Int?
  chapter_id String    @db.VarChar(99)
  createdAt  DateTime  @default(now()) @db.DateTime(0)
  updatedAt  DateTime  @default(now()) @db.DateTime(0)
  upVotes    Int?
  downVotes  Int?
  edited     Boolean?
  ruin_users RuinUser? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_id_to_id")

  @@index([user_id], map: "fk_user_id_to_id")
}

model avatars {
  id         Int       @id @default(autoincrement())
  imageUrl   String    @db.VarChar(255)
  userId     Int?      @unique(map: "userId")
  ruin_users RuinUser? @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "avatars_ibfk_1")
}
